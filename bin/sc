#!/usr/bin/gosh
;;; -*- Mode: Scheme -*-

(use file.util)
(use gauche.process)
(use srfi-1)
(use util.match)

(define (main args)
  (load "/home/stas/lisp/bin/data")
  (match (map string->symbol (cdr args))
         (('g . arguments)
          (act get arguments))
         (('u . arguments)
          (act update arguments))
         ((action . rest)
          (print
           (format "There is no such action: ~s." action)))))

(define (act action arguments)
  (define (act-1 config)
    (match-let1 (name method url path asd)
                config
                (display (format "Acting on ~a:~%" name))
                (action method url path asd)))
  (if (null? arguments)
      (for-each act-1 *projects*)
      (for-each
       (lambda (name)
         (act-1 (assq name *projects*)))
       arguments)))

(define *update*
  '((git pull)
    (darcs pull -a)
    (cvs update)
    (svn update)
    (hg update)))

(define (update method url path asds)
  (when (file-exists? path)
    (current-directory path)
    (run-process (assq method *update*)
                 :wait #t)))

(define *get*
  '((git clone)
    (darcs get)
    (svn co)
    (hg clone)))

(define (get method url path asds)
  (define (link-asd path asds)
    (for-each
     (lambda (asd)
       (let ((existing (build-path path asd))
             (new (build-path *asdf-registry* asd)))
         (when (and (file-exists? existing) (not (file-exists? new)))
           (sys-symlink existing new))))
     asds))

  (run-process (get-command method url path)
               :wait #t)
  (link-asd path asds))

(define (get-command method url path)
  (case method
    ((cvs) (cvs url path))
    ((wget) (wget url path))
    (else (append (assq method *get*) (list url path)))))

(define (cvs url path)
  ;; ugly cvs...
  (receive (parent name _) (decompose-path path)
    (current-directory parent)
    (match-let1 (root module) (string-split url " ")
                `(cvs -z3 -d ,root co -d ,name ,module))))

(define (wget url path)
  (make-directory* path)
  (current-directory path)
  (process-output->string
   (format "wget -O - \"~a\" | tar --strip-components 1 -xz" url))
  '(true))
